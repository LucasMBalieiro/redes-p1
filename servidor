#!/usr/bin/env python3
import asyncio
from tcp import Servidor
import re


def validar_nome(nome):
    return re.match(br'^[a-zA-Z][a-zA-Z0-9_-]*$', nome) is not None


def sair(conexao):
    print(conexao, 'conexão fechada')
    conexao.fechar()


def dados_recebidos(conexao, dados):
    if dados == b'':
        return sair(conexao)
    
    
    if not hasattr(conexao, 'buffer'):
        conexao.buffer = b''

    conexao.buffer += dados #adiciona todas as msgs no buffer pra dps separar bonitinho

    while b'\n' in conexao.buffer: #vai rodar ate o /n final

        if b'\r\n' in conexao.buffer:
            dado, conexao.buffer = conexao.buffer.split(b'\r\n', 1)
        else:
            dado, conexao.buffer = conexao.buffer.split(b'\n', 1)

        dado = dado.rstrip(b'\r')
        
        if dado:
            # Process the message
            parts = dado.split(b' ', 1)
            if len(parts) > 1:
                command, payload = parts[0], parts[1]
            else:
                command, payload = parts[0], b''

            # Decode and handle the command
            if command == b'PING':
                # Send response
                conexao.enviar(b':server PONG server :' + payload)
    
    print(conexao, dados)


def conexao_aceita(conexao):
    print(conexao, 'nova conexão')
    conexao.registrar_recebedor(dados_recebidos)


servidor = Servidor(6667)
servidor.registrar_monitor_de_conexoes_aceitas(conexao_aceita)
asyncio.get_event_loop().run_forever()
